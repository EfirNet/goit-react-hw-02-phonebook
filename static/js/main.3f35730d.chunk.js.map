{"version":3,"sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App.styled.js","components/App.jsx","index.js"],"names":["Label","styled","label","Input","input","Filter","value","onChange","type","placeholder","Form","form","Button","button","ContactForm","state","name","number","handleChange","event","target","setState","handleSubmit","preventDefault","props","onSubmit","onClick","reset","randomId","nanoid","this","pattern","title","id","required","Component","Ul","ul","Name","div","Number","ContactList","contacts","onDeleteContact","map","Title","h1","Wrap","Subtitle","h2","App","contactsJson","filter","formSubmitHandler","data","console","log","handleBtnClick","find","item","toLowerCase","alert","contact","deleteContact","contactId","prevState","changeFilter","currentTarget","getFilteredItems","normalizedFilter","includes","filteredContacts","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3f35730d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 20px;\n  padding: 20px 0;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n  background-color: #00000090;\n`;\n\nexport const Input = styled.input`\n  background-color: #ffffff7f;\n  width: 240px;\n  border-radius: 5px;\n  margin: 0 auto;\n  height: 23px;\n  margin-top: 15px;\n  border: 1px solid #f3b9ee;\n  &::placeholder {\n    color: #000;\n    text-transform: lowercase;\n    font-size: 12px;\n    letter-spacing: 1px;\n    padding-left: 3px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => (\n  <Label>\n    Find contacts by name\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"search...\"\n    />\n  </Label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      margin: 0 auto;\n      width: 250px;\n      padding: 30px 25px;\n      border-radius: 5px;\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n      background-color: #00000090;\n    `;\n\nexport const Label = styled.label`\n      text-transform: uppercase;\n      font-size: 12px;\n      letter-spacing: 2px;\n      font-weight: 600;\n    `;\n\nexport const Input = styled.input`\n      width: 240px;\n      height: 23px;\n      border-radius: 5px;\n      padding: 3px;\n      margin: 5px 0 20px;\n      background-color: #ffffff7f;\n      border: 1px solid #f3b9ee;\n      &::placeholder {\n        color: #000;\n        text-transform: lowercase;\n        font-size: 12px;\n        letter-spacing: 1px;\n        padding-left: 3px;\n        /* &:hover {\n          box-shadow: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px inset,\n            rgba(0, 0, 0, 0.9) 0px 0px 0px 1px;\n        } */\n      }\n    `;\n\nexport const Button = styled.button`\n      width: 200px;\n      height: 23px;\n      padding: 2px;\n      border-radius: 5px;\n      margin: 0 auto;\n      text-transform: uppercase;\n      letter-spacing: 2px;\n      background-color: #ffffff7f;\n      border: 0;\n      cursor: pointer;\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n\n      &:hover {\n        box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em,\n          rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em,\n          rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n        background-color: #ffffff2f;\n      }\n    `;\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Form, Button, Label, Input } from './ContactForm.styled';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  // randomId = nanoid();\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.props.onClick(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const randomId = nanoid();\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            placeholder=\"enter name...\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            id={randomId}\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            onChange={this.handleChange}\n            placeholder=\"enter phone number...\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            id={randomId}\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n  list-style: none;\npadding: 20px 0;\nmargin: 0;\nbackground-color: #00000090;\n border-radius: 5px;\n   box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n`;\n\n\nexport const Button = styled.button`\n      width: 200px;\n      height: 20px;\n      padding: 2px;\n      border-radius: 5px;\n      margin: 5px auto 15px;\n      /* text-transform: uppercase; */\n      letter-spacing: 2px;\n      background-color: #ffffff7f;\n\n      border: 0;\n      cursor: pointer;\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n\n      /* box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgb(209, 213, 219) 0px 0px 0px 1px inset; */\n      &:hover {\n        box-shadow:rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n      background-color: #ffffff2f;\n      }\n    `;\n\nexport const Name = styled.div`\nfont-size: 20px;\nfont-weight: 600;\n  color: black;\n`;\n\nexport const Number = styled.div`\nfont-size: 16px;\nfont-style: italic;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { Ul, Button, Name, Number } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <Ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} id={id}>\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </Button>\n      </li>\n    ))}\n  </Ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n      font-size: 30px;\n      text-align: center;\n      text-transform: uppercase;\n      letter-spacing: 3px;\n      font-weight: 700;\n      color: #B4A7B3;\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n      border-radius: 5px;\n      background-color: #00000090;\n    `;\n\nexport const Wrap = styled.div`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 300px;\n      margin: 50px auto;\n      padding: 5px 20px 20px;\n      background-color: thistle;\n      border-radius: 5px;\n     box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;\n    `;\n\nexport const Subtitle = styled.h2`\n    margin-top: 20px;\n   font-size: 26px;\n      text-align: center;\n      text-transform: uppercase;\n      letter-spacing: 2px;\n      font-weight: 700;\n      color: #B4A7B3;\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n      border-radius: 5px;\n      background-color: #00000090;\n    `;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Filter from './Filter';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport contactsJson from '../contacts.json';\nimport { Title, Wrap, Subtitle } from './App.styled';\n\nexport class App extends Component {\n  state = {\n    contacts: contactsJson,\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  handleBtnClick = ({ name, number }) => {\n    if (\n      this.state.contacts.find(\n        item => item.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      const contact = {\n        id: nanoid(),\n        name: name,\n        number: number,\n      };\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getFilteredItems = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredItems();\n\n    return (\n      <>\n        <Wrap>\n          <Title>Phonebook</Title>\n          <ContactForm\n            onClick={this.handleBtnClick}\n            onSubmit={this.formSubmitHandler}\n          />\n\n          <Subtitle>Contacts</Subtitle>\n          <Filter value={filter} onChange={this.changeFilter} />\n\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Wrap>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { App } from 'components/App';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}